/* Generated by Brace_UMD 0.2.6 */
(function(o) {
    var e = void 0 !== requirejs && requirejs || void 0, t = void 0 !== define && define || void 0, r = void 0 !== require && require || module && module.require.bind(module) || void 0, p = function() {
        var o = Array.prototype.slice.call(arguments);
        o.shift();
        arguments[0].apply(arguments[0].prototype, o);
    }, define = function() {
        var o = Array.prototype.slice.call(arguments);
        o.unshift(t || "object" == typeof module && module.exports && n || i);
        p.apply(p.prototype, o);
    }, require = function() {
        var o = Array.prototype.slice.call(arguments);
        o.unshift(r || i);
        p.apply(p.prototype, o);
    }, requirejs = function() {
        var o = Array.prototype.slice.call(arguments);
        o.unshift(e || "object" == typeof module && module.exports && n || i);
        p.apply(p.prototype, o);
    }, n = function(o, e, t, p) {
        e = e || [];
        module.exports = t.apply(t.prototype, e.map(function(o, e) {
            return r(o);
        }));
    }, i = function(e, t, r, p) {
        if (e && e.constructor === Array) {
            var n = p;
            p = r;
            r = t;
            t = e;
            e = __filename.replace(/.*[\\,\/]/g, "");
        }
        "string" != typeof e ? console.log("The global native Object needs to be used but the module id parameter is not available.") : t.every(function(t, r) {
            return t in o || !!console.log("The dependency", t, "is not loaded into the factory yet. Skipping loading of the module", e);
        }) && (o[e] = r.apply(r, t.map(function(e, t) {
            return o[e];
        })));
    };
}(this