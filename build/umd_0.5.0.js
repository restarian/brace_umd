/* Generated by Brace_UMD 0.5.0 */
!function(e, o, i, n, r) {
    var module, __filename, __dirname, define, requirejs, t = {
        e: void 0,
        o: !1,
        i: o,
        n: e,
        requirejs: n,
        define: i,
        r: __filename || o && o.exports && o.filename || void 0,
        t: __dirname || o && o.exports && o.require('path').dirname(o.filename) || void 0,
        d: r,
        f: {
            requirejs: !0,
            define: !0,
            require: !0,
            factory: !0
        },
        s: [ 'config', 'nextTick', 'version', 'jsExtRegExp', 'isBrowser', 's', 'toUrl', 'undef', 'defined', 'specified', 'onError', 'createNode', 'load', 'exec' ],
        a: [ 'amd', 'require' ],
        c: function() {
            if (t.i && !t.define) try {
                t.define = t.i.require('amdefine')(t.i);
                for (var e in t.define) t.c[e] = t.define[e];
            } catch (e) {
                console.log('Unable to find amdefine module.', e.message);
            }
            var o = t.define || t.factory;
            o == t.define ? console.log('Using proxied amdefine definition.') : console.log('Using factory proxied from amdefine call.'), 
            t.d.auto_anonymouse ? !0 !== t.o && arguments.length > 2 ? t.o = arguments[0] : arguments.length <= 2 && (t.o = !0) : t.c = o, 
            o.apply(o.prototype, arguments);
        },
        u: function() {
            if (t.i && !t.requirejs) try {
                t.requirejs = t.i.require('requirejs');
                for (var e in t.requirejs) t.u[e] = t.requirejs[e];
            } catch (e) {
                console.log('Unable to find requirejs module.', e.message);
            }
            console.log('Using proxied requirejs method.');
            var o = t.requirejs || t.factory;
            t.u = o, o.apply(o.prototype, arguments);
        }
    };
    t.factory = t.n && function(e, o, i, n) {
        if (e && e.constructor === Array && this.i) {
            var r = e, t = dependency;
            n = n, i = i, dependency = r, e = __filename || '';
        }
        'string' != typeof e ? console.log('The factory Object is being used but the module does not supply an id parameter. Skipping loading of the module.') : o.every(function(o) {
            return o in this.n || !!console.log('The dependency', o, 'is not loaded into the factory. Skipping loading of the module', e);
        }, this) && (this.n[e] = i.apply(i.prototype, o.map(function(e, o) {
            return this.n[e];
        }, this)));
    }.bind(t);
    for (var d in t.a) t.c.__defineGetter__(t.a[d], function(e) {
        if (t.i && !t.define) try {
            t.define = t.i.require('amdefine')(t.i);
            for (var o in t.define) delete this[o], this[o] = t.define[o];
            return console.log('Using proxied amdefine method.'), t.define[e];
        } catch (e) {
            return console.log('Unable to find amdefine module.', e.message);
        }
    }.bind(null, t.a[d]));
    for (var d in t.s) t.u.__defineGetter__(t.s[d], function(e) {
        if (t.i && !t.requirejs) try {
            t.requirejs = t.i.require('requirejs');
            for (var o in t.requirejs) delete this[o], this[o] = t.requirejs[o];
            return console.log('Using proxied requirejs method.'), t.requirejs[o];
        } catch (e) {
            return console.log('Unable to find requirejs module.', e.message);
        }
    }.bind(null, t.s[d]));
    t.d.force_type && (t.d.force_type in t.f ? t[t.d.force_type] ? (console.log('Forcing use of the definition type', t.d.force_type), 
    t.requirejs = t.require = t.define = t.factory = t[t.d.force_type]) : console.log('The forced type', t.d.force_type, 'is not available.') : console.log('The forced type', t.d.force_type, 'specified as an option is not supported by Brace UMD. Supported types are', Object.keys(t.f))), 
    __dirname = t.t, __filename = t.r, module = t.i, define = !t.d.auto_anonymouse && t.define || t.c, 
    requirejs = t.requirejs || t.u, t.o.length && define([ t.o ], function(e) {
        return e;
    });
}(this, 'object' == typeof module && module || void 0, 'function' == typeof define && define || void 0, 'function' == typeof requirejs && requirejs || void 0, {});