/* Generated by Brace_UMD 0.3.2 */
!function(module,__filename,__dirname,def,reqjs,fac,option){option=option||{};var require,define,requirejs,umd={requirejs:reqjs,define:def,module:module,_factory:module&&module.exports||fac,support:["requirejs","define","require","factory"],force_type:option.force_type,requirejs_proxy_key:["config","nextTick","version","jsExtRegExp","isBrowser","s","toUrl","undef","defined","specified","onError","createNode","load","exec"],define_proxy_key:["amd","require"],define_proxy:function(){if(umd.module&&!umd.define)try{umd.define=umd.module.require("amdefine")(umd.module);for(var p in umd.define)umd.define_proxy[p]=umd.define[p]}catch(e){console.log(e.message)}var use_type=umd.define||umd.factory;use_type==umd.define?console.log("Using proxied amdefine definition."):console.log("Using factory proxied from amdefine call."),use_type.apply(use_type.prototype,arguments)},requirejs_proxy:function(){if(umd.module&&!umd.requirejs)try{umd.requirejs=umd.module.require("requirejs");for(var p in umd.requirejs)umd.requirejs_proxy[p]=umd.requirejs[p]}catch(e){console.log(e.message)}console.log("Using proxied requirejs method.");var use_type=umd.requirejs||umd.factory;use_type.apply(use_type.prototype,arguments)}};for(var o in umd.define_proxy_key)umd.define_proxy.__defineGetter__(umd.define_proxy_key[o],function(key){if(umd.module&&!umd.define)try{umd.define=umd.module.require("amdefine")(umd.module);for(var p in umd.define)delete this[p],this[p]=umd.define[p];return console.log("Using proxied amdefine method."),umd.define[key]}catch(e){return console.log(e.message)}}.bind(null,umd.define_proxy_key[o]));for(var o in umd.requirejs_proxy_key)umd.requirejs_proxy.__defineGetter__(umd.requirejs_proxy_key[o],function(key){if(umd.module&&!umd.requirejs)try{umd.requirejs=umd.module.require("requirejs");for(var p in umd.requirejs)delete this[p],this[p]=umd.requirejs[p];return console.log("Using proxied requirejs method."),umd.requirejs[p]}catch(e){return console.log(e.message)}}.bind(null,umd.requirejs_proxy_key[o]));umd.factory=umd._factory&&function(id,dependancy,callback,error_callback){if(id&&id.constructor===Array&&this.module){var i=id,d=dependency;error_callback=error_callback,callback=callback,dependency=i,id=this.module.filename||""}"string"!=typeof id?console.log("The factory Object is being used but the module does not supply an id parameter. Skipping loading of the module."):dependancy.every(function(value){return value in this._factory||!!console.log("The dependency",value,"is not loaded into the factory. Skipping loading of the module",id)},this)&&(this._factory[id]=callback.apply(callback.prototype,dependancy.map(function(value,index){return this._factory[value]},this)))}.bind(umd),umd.force_type&&(new RegExp(umd.force_type+",+").test(umd.support.join(",")+",")?umd[umd.force_type]?(console.log("Forcing use of the definition type",umd.force_type),umd.requirejs=umd.require=umd.define=umd.factory=umd[umd.force_type]):console.log("The forced type",umd.force_type,"is not available."):console.log("The force_type",umd.force_type,"specified as an option is not supported by Brace UMD. Supported types are:",umd.support.join(", "))),define=umd.define||umd.define_proxy,requirejs=umd.requirejs||umd.requirejs_proxy,require=umd.module&&umd.module.require||requirejs;define("module_one",[],function(){var id="module_one";console.log(id+" has initialized.");var mod={};mod.id=id;return mod});define("second_module",[],function(){var id="second_module";console.log(id+" has initialized.");var mod={};mod.id=id;return mod});var requirejs=require("requirejs");requirejs.config({baseUrl:__dirname,nodeRequire:require});requirejs(["module_one","second_module"],function(one,two){var id="entry";console.log(id+" has initialized.");var mod={};mod.id=id;mod[one.id]=one;mod[two.id]=two;console.log(one,two);return mod});define("entry",function(){})}("object"==typeof module&&module.exports&&module||void 0,"string"==typeof __filename&&__filename||"","string"==typeof __dirname&&__dirname||"","function"==typeof define&&define||void 0,"function"==typeof requirejs&&requirejs||void 0,this);