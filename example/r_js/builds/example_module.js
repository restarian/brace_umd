/* Generated by Brace_UMD 0.2.2 */
!function(o) {
    var e = l || void 0, t = p || void 0, n = r || void 0, l = function() {
        var t = Array.prototype.slice.call(arguments);
        t.unshift(e || "object" == typeof module && module.exports && i || o);
        a.apply(a.prototype, t);
    }, r = function() {
        var e = Array.prototype.slice.call(arguments);
        e.unshift(n || o);
        a.apply(a.prototype, e);
    }, p = function() {
        var e = Array.prototype.slice.call(arguments);
        e.unshift(t || "object" == typeof module && module.exports && i || o);
        a.apply(a.prototype, e);
    }, i = function(o, e, l, r) {
        e = e || [];
        module.exports = l.apply(l.prototype, e.map(function(o, e) {
            return (t || n)(o);
        }));
    }, o = function(e, t, n, l) {
        "string" != typeof e ? console.warn("The global native Object needs to be used but the module id parameter is not available.") : t.every(function(t, n) {
            return t in o || !!console.warn("The dependency", t, "is not loaded into the factory yet. Skipping loading of the module", e);
        }) && (o[e] = n.apply(n, t.map(function(e, t) {
            return o[e];
        })));
    }, a = function() {
        var o = Array.prototype.slice.call(arguments);
        o.shift();
        arguments[0].apply(arguments[0].prototype, o);
    };
    l("another_module", [ "another_module" ], function(o) {
        console.log("module init");
        return {
            cool: "joes"
        };
    });
    l("example_module", [ "another_module" ], function(o) {
        console.log("odule init");
        return {
            cool: "joes"
        };
    });
}(this);